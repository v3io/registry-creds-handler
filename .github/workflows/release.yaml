name: Release

on:
  release:
    types:
      - created

  # Create unstable release on push to development
  push:
    branches:
      - development

env:
  RELEASE_REGISTRY: gcr.io
  RELEASE_REPO: iguazio

jobs:
  release-preperation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Delete previous unstable release
        if: github.event_name == 'push'
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true # default: false
          tag_name: unstable # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new unstable release
        id: create_unstable_release
        if: github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: unstable
          release_name: unstable
          body: |
            Latest unstable release
            - Git sha ${{ github.sha }}
            - Updated at ${{ github.event.head_commit.timestamp }}
          draft: false
          prerelease: false

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ release-preperation ]
    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump runner context
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Dump github ref
        run: echo "$GITHUB_REF"

      - name: Extract ref info
        id: release_info
        run: |
          echo ::set-output name=REF_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=REF_TAG::${GITHUB_REF#refs/tags/}

      - name: Set Version tag to unstable
        if: github.event_name == 'push' && steps.release_info.outputs.REF_BRANCH == 'development'
        run: |
          echo "VERSION=unstable" >> $GITHUB_ENV

      # the image tag convention is semver without the v prefix
      - name: Set Version to release tag
        if: github.event_name == 'release'
        run: |
          version=${{ steps.release_info.outputs.REF_TAG }}
          version=${version#"v"}
          echo "VERSION=${version}" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: Login to GCR
        run: echo "$GCR_JSON_KEY" | docker login -u _json_key --password-stdin https://gcr.io
        env:
          GCR_JSON_KEY: ${{ secrets.GCR_IGUAZIO_JSON_KEY }}

      - name: Build
        run: make build
        env:
          PROVAZIO_REPOSITORY: ${{ env.RELEASE_REGISTRY }}/${{ env.RELEASE_REPO }}/

      - name: Push images
        run: make push
        env:
          REGISTRY: ${{ env.RELEASE_REGISTRY }}/${{ env.RELEASE_REPO }}/
